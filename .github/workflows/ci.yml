name: "bacon-cache-warmer ci"

on: [push, pull_request]

jobs:
  build-test-push:
    runs-on: ubuntu-latest
    steps:


      - name: "Build: checkout source code"
        uses: actions/checkout@v2          
      - name: "Build: build docker image"
        run: |
          docker build ./image/ -t localimage:latest


      - name: "Tests: initialisation du test en créant un conteneur qui va chauffer un seul KBART (le premier du fil RSS de BACON)"
        run: |
          docker run -d --rm --name bacon-cache-warmer -e BACON_MAX_URL_TO_WARM="1" localimage:latest
          docker ps
          sleep 30 && docker logs bacon-cache-warmer
      - name: "Tests: 1st test -> le conteneur démarre-t-il bien ?"
        run: |
          NB_CONTAINERS=$(docker ps | grep " Up " | wc -l)
          test $NB_CONTAINERS = 1          
      - name: "Tests: 2nd test -> bacon-cache-warmer a-t-il bien chauffé une URL (le premier KBART de la liste) ?"
        run: |
          docker logs bacon-cache-warmer | grep 'URL chauffee (1 sur 1)'
          test $?


      - name: "Push: prepare version from git tags/branchs"
        id: docker_tag_meta
        uses: docker/metadata-action@v3
        with:
          images: abesesr/bacon-cache-warmer
      - name: "Push: login to DockerHub"
        if: github.event_name != 'pull_request'
        run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin  
      - name: "Push: push docker image"
        if: github.event_name != 'pull_request'
        run: |
          docker build ./image/ -t localimage:latest
          DOCKER_TAGS="${{ steps.docker_tag_meta.outputs.tags }}"
          for DOCKER_TAG in $DOCKER_TAGS
          do
            docker tag localimage:latest $DOCKER_TAG
            docker push $DOCKER_TAG
          done
